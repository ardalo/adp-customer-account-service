name: CI

on: push

env:
  DOCKER_IMAGE_NAME: ardalo/adp-customer-account-service
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: adp-customer-account-service

jobs:
  build_test_analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Build / Test / Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build jacocoTestReport sonarqube --info
  dependency_check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Dependency Vulnerabilities Check
        run: ./gradlew dependencyCheckAnalyze
  docker_build_push:
    needs: build_test_analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push tagged Docker image
        run: |
          ./gradlew bootBuildImage --imageName=${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
      - name: Build and push latest Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          ./gradlew bootBuildImage --imageName=${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
#  deploy_to_gke:
#    if: github.ref == 'refs/heads/main'
#    needs: docker_build_push
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      id-token: write
#    steps:
#      - uses: actions/checkout@v4
#      - name: Authenticate to Google Cloud
#        uses: google-github-actions/auth@v1
#        with:
#          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'
#      - uses: google-github-actions/get-gke-credentials@v1
#        with:
#          cluster_name: ${{ env.GKE_CLUSTER }}
#          location: ${{ env.GKE_ZONE }}
#      - name: Deploy
#        run: |-
#          helm upgrade \
#            $DEPLOYMENT_NAME \
#            deployment/helm \
#            --set image.repository=${{ env.DOCKER_IMAGE_NAME }} \
#            --set image.tag=${{ github.sha }} \
#            --atomic \
#            --cleanup-on-fail \
#            --debug \
#            --install \
#            --timeout 3m \
#            --values deployment/helm/values.yaml \
#            --wait
#          kubectl rollout status deployment/$DEPLOYMENT_NAME
#          kubectl get services -o wide
#  smoke_tests:
#    needs: deploy_to_gke
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - name: Validate direct API access
#            path: http://adp-customer-account-service.api.ardalo.com/prometheus-metrics
#            acceptedStatusCodes: 200
#          - name: Validate Swagger UI accessible via root path
#            path: http://adp-customer-account-service.api.ardalo.com/
#            acceptedStatusCodes: 200
#          - name: Validate Swagger UI availability
#            path: http://adp-customer-account-service.api.ardalo.com/swagger-ui/index.html
#            acceptedStatusCodes: 200
#          - name: Validate Swagger UI JSON availability
#            path: http://adp-customer-account-service.api.ardalo.com/v3/api-docs
#            acceptedStatusCodes: 200
#          - name: Validate global 404 page
#            path: http://ardalo.com/page-does-not-exist
#            acceptedStatusCodes: 200 #TODO: The 404 page should return 404 Not Found. Not implemented yet as Traefik has not middleware for response code override out of the box
#    steps:
#      - name: ${{ matrix.name }}
#        uses: indiesdev/curl@v1.1
#        with:
#          url: ${{ matrix.path }}
#          accept: ${{ matrix.acceptedStatusCodes }}
#          timeout: 5000
#          retries: 2
